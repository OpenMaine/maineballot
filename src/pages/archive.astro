---
import { getCollection, getEntry } from 'astro:content'
import { getEntryUrl } from '#utils/get-url'
import GlobalLayout from '#layouts/global-layout.astro'
import Container from '#components/container.astro'

const allEelections = await getCollection('elections')

const stateElections = (
  await Promise.all(
    allEelections.map(async (elect) => ({
      slug: elect.id,
      data: elect.data,
      posts: (await getCollection('ballot-questions', ({ data }) => data.election.id === elect.id)).sort(
        (a, b) =>
          new Date(b.data.electionDate).getTime() - new Date(a.data.electionDate).getTime() || a.id.localeCompare(b.id),
      ),
    })),
  )
)
  .filter((elect) => elect.posts.length > 0)
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())

const localElections = (
  await Promise.all(
    (await getCollection('local')).map(async (local) => ({
      ...local,
      election: await getEntry(local.data.election),
    })),
  )
).sort((a, b) => new Date(b.election.data.date).getTime() - new Date(a.election.data.date).getTime())

const candidates = (
  await Promise.all(
    (await getCollection('candidates')).map(async (local) => ({
      ...local,
      election: await getEntry(local.data.election),
    })),
  )
).sort((a, b) => new Date(b.election.data.date).getTime() - new Date(a.election.data.date).getTime())
---

<GlobalLayout title="Elections archive" description="Ballot questions for Maine elections over time.">
  <Container class="my-16">
    <h1 class="text-4xl font-bold mb-8 text-neutral-700">Elections Archive</h1>

    <div class="prose:prose prose:prose-neutral max-w-none">
      <h2>State Elections</h2>
      <div>
        {
          stateElections.map((tag) => (
            <div>
              <h3>{tag.data.title}</h3>
              <ul>
                {tag.posts.map((post) => (
                  <li>
                    <a href={getEntryUrl(post)}>{post.data.title}</a>
                    <p class="mt-2">{post.data.excerpt}</p>
                  </li>
                ))}
              </ul>
            </div>
          ))
        }
      </div>
      <h2>Local Elections</h2>
      <ul>
        {
          localElections.map((elect) => (
            <li>
              <a href={getEntryUrl(elect)}>{elect.election.data.title}</a>
            </li>
          ))
        }
      </ul>
      <h2>Candidate</h2>
      <ul>
        {
          candidates.map((cand) => (
            <li>
              <a href={getEntryUrl(cand)}>{cand.election.data.title}</a>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</GlobalLayout>
